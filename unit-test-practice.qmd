---
title: "unit test practice"
format: html
editor: visual
---

## unit testing with the "testthat" package

first install necessary packages

```{r}
#install.packages("testthat")
#install.packages("devtools")
#install.packages("remotes")
```

```{r}
library(testthat)
library(devtools)
library(remotes)
```

```{r}

```

write a function to practice unit tests.

This function is going to find the mean value of each column, and then return the lowest and highest mean value calculated (in that order).

We would expect:

-   the output to be numeric

-   output should be a vector of length 2

-   the first value should be smaller than the second value

```{r}
mean_range <- function(df) {
  #return the mean values of each column
  col_means <- apply(X = df, MARGIN = 2, FUN = mean, na.rm = TRUE)
  #find min & max values
  col_mean_max <- max(col_means)
  col_mean_min <- min(col_means)
  
  #return min and max values (in that order)
  return(c(col_mean_min, col_mean_max))
}

mean_range(df = mtcars)
```

Write some unit tests!

```{r}
#| include: false
#test that the output is of length 2
expect_length(mean_range(df = mtcars), 2)

#test that first value is less than secon value
expect_true(mean_range(mtcars)[1] > mean_range(mtcars)[2])

if (mean_range(mtcars)[1] > mean_range(mtcars)[2]) {
  stop()
}
```

## practice sourcing functions

```{r}
#source our food cart functions
source(here::here("src", "food-cart-functions.R"))

#test running function
name_cart(food = "strawberry", animal = "marmot")
```
